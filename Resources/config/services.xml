<?xml version="1.0" encoding="UTF-8" ?>
<container
        xmlns="http://symfony.com/schema/dic/services"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://symfony.com/schema/dic/services
                        http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="ekyna_user.login.form_type.class">Ekyna\Bundle\UserBundle\Form\Type\LoginType</parameter>
        <parameter key="ekyna_user.profile.form_type.class">Ekyna\Bundle\UserBundle\Form\Type\ProfileType</parameter>
        <parameter key="ekyna_user.registration.form_type.class">Ekyna\Bundle\UserBundle\Form\Type\RegistrationType</parameter>

        <parameter key="ekyna_user.user.search_repository.class">Ekyna\Bundle\UserBundle\Service\Search\UserRepository</parameter>

        <parameter key="ekyna_user.security.remember_me">_user_remember_me</parameter>
    </parameters>

    <services>
        <!-- Authentication handlers -->
        <service id="ekyna_user.security.authentication_success_handler"
                 class="Ekyna\Bundle\UserBundle\Service\Security\AuthenticationSuccessHandler"
                 parent="security.authentication.success_handler"
                 public="false">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher"/>
            </call>
        </service>
        <service id="ekyna_user.security.authentication_failure_handler"
                 class="Ekyna\Bundle\UserBundle\Service\Security\AuthenticationFailureHandler"
                 parent="security.authentication.failure_handler"
                 public="false">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher"/>
            </call>
        </service>
        <service id="Ekyna\Bundle\UserBundle\Service\Security\LogoutHandler">
            <argument type="service" id="ekyna_user.user.provider"/>
        </service>

        <!-- OAuth FOS bridge -->
        <service id="ekyna_user.oauth.token_manager"
                 class="Ekyna\Bundle\UserBundle\Service\OAuth\TokenManager"
                 public="false">
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
        </service>
        <service id="ekyna_user.oauth.fos_provider"
                 class="Ekyna\Bundle\UserBundle\Service\OAuth\FOSUserProvider"
                 public="false">
            <argument type="service" id="fos_user.user_manager"/>
            <argument type="service" id="ekyna_user.oauth.token_manager"/>
        </service>

        <!-- Search repository -->
        <service id="ekyna_user.user.search"
                 class="Ekyna\Bundle\UserBundle\Service\Search\UserRepository">
            <argument type="service" id="fos_elastica.index.ekyna_user_user.doc"/>
            <argument type="service" id="fos_elastica.elastica_to_model_transformer.ekyna_user_user.doc"/>
            <call method="setGroupRepository">
                <argument type="service" id="ekyna_user.group.repository"/>
            </call>
            <!--<tag name="ekyna_resource.search" resource="ekyna_user.user"/>-->
        </service>

        <!-- Events listeners -->
        <service id="ekyna_user.security.event_subscriber"
                 class="Ekyna\Bundle\UserBundle\EventListener\SecurityEventSubscriber">
            <argument type="service" id="ekyna_user.user.provider"/>
            <argument type="service" id="ekyna_user.account.widget_renderer"/>
            <argument type="service" id="ekyna_core.flash_helper"/>
            <tag name="kernel.event_subscriber"/>
        </service>
        <service id="ekyna_user.user.event_subscriber"
                 class="Ekyna\Bundle\UserBundle\EventListener\UserEventSubscriber">
            <argument type="service" id="fos_user.user_manager"/>
            <argument type="service" id="ekyna_user.mailer.default"/>
            <tag name="resource.event_subscriber"/>
        </service>

        <!-- Form types -->
        <service id="ekyna_user.profile.form_type" class="%ekyna_user.profile.form_type.class%">
            <argument>%ekyna_user.user.class%</argument>
            <argument>%ekyna_user.config%</argument>
            <tag name="form.type"/>
        </service>
        <service id="ekyna_user.login.form_type"
                 class="%ekyna_user.login.form_type.class%">
            <argument type="service" id="router"/>
            <argument type="service" id="request_stack"/>
            <argument>%ekyna_user.security.remember_me%</argument>
            <tag name="form.type"/>
        </service>
        <service id="ekyna_user.registration.form_type"
                 class="%ekyna_user.registration.form_type.class%">
            <argument>%ekyna_user.user.class%</argument>
            <argument>%ekyna_user.config%</argument>
            <argument>%kernel.environment%</argument>
            <tag name="form.type"/>
        </service>
        <service id="ekyna_user.user.form_type"
                 class="Ekyna\Bundle\UserBundle\Form\Type\UserType">
            <argument>%ekyna_user.user.class%</argument>
            <argument>%ekyna_user.group.class%</argument>
            <tag name="form.type"/>
        </service>
        <service id="ekyna_user.user_search.form_type"
                 class="Ekyna\Bundle\UserBundle\Form\Type\UserSearchType">
            <argument>%ekyna_user.user.class%</argument>
            <tag name="form.type"/>
        </service>
        <service id="ekyna_user.user_choice.form_type"
                 class="Ekyna\Bundle\UserBundle\Form\Type\UserChoiceType">
            <argument>%ekyna_user.user.class%</argument>
            <tag name="form.type"/>
        </service>

        <!-- Table types -->
        <service id="ekyna_user.user.table_type"
                 class="Ekyna\Bundle\UserBundle\Table\Type\UserType">
            <argument type="service" id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface"/>
            <argument>%ekyna_user.user.class%</argument>
            <tag name="table.type"/>
        </service>

        <!-- Routing loader -->
        <service id="ekyna_user.routing.account_loader"
                 class="Ekyna\Bundle\UserBundle\Routing\AccountLoader">
            <argument>%ekyna_user.config%</argument>
            <tag name="routing.loader"/>
        </service>

        <!-- Account controller -->
        <service id="ekyna_user.controller.account"
                 class="Ekyna\Bundle\UserBundle\Controller\AccountController">
            <argument type="service" id="security.authorization_checker"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="router"/>
            <argument type="service" id="templating"/>
            <argument type="service" id="ekyna_user.account.widget_renderer"/>
        </service>

        <!-- Account Menu -->
        <service id="ekyna_user.menu_builder" class="Ekyna\Bundle\UserBundle\Menu\MenuBuilder">
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="knp_menu.factory"/>
            <argument type="service" id="security.authorization_checker"/>
            <argument type="service" id="security.token_storage"/>
            <argument>%ekyna_user.config%</argument>
        </service>
        <service id="ekyna_user.menu.account" class="Knp\Menu\MenuItem">
            <factory service="ekyna_user.menu_builder" method="createAccountMenu"/>
            <argument type="service" id="request_stack"/>
            <tag name="knp_menu.menu" alias="user_account"/>
        </service>
        <service id="ekyna_user.menu.widget" class="Knp\Menu\MenuItem">
            <factory service="ekyna_user.menu_builder" method="createWidgetMenu"/>
            <argument type="service" id="request_stack"/>
            <tag name="knp_menu.menu" alias="user_widget"/>
        </service>

        <!-- User provider -->
        <service id="ekyna_user.user.provider"
                 class="Ekyna\Bundle\UserBundle\Service\Provider\UserProvider">
            <argument type="service" id="security.token_storage"/>
        </service>

        <!-- User security provider -->
        <service id="Ekyna\Bundle\UserBundle\Service\Security\UserProvider">
            <argument type="service" id="ekyna_user.user.repository"/>
        </service>

        <!-- Account widget renderer -->
        <service id="ekyna_user.account.widget_renderer"
                 class="Ekyna\Bundle\UserBundle\Service\Account\WidgetRenderer"
                 lazy="true">
            <argument type="service" id="templating"/>
        </service>

        <!-- Twig extensions -->
        <service id="ekyna_user.twig.user_extension"
                 class="Ekyna\Bundle\UserBundle\Twig\UserExtension">
            <argument>%ekyna_user.config%</argument>
            <tag name="twig.extension"/>
        </service>

        <!-- (FOS) User manager -->
        <service id="ekyna_user.user_manager.default"
                 class="Ekyna\Bundle\UserBundle\Doctrine\UserManager"
                 public="false">
            <argument type="service" id="fos_user.util.password_updater"/>
            <argument type="service" id="fos_user.util.canonical_fields_updater"/>
            <argument type="service" id="fos_user.object_manager"/>
            <argument type="service" id="ekyna_user.group.repository"/>
            <argument>%ekyna_user.user.class%</argument>
        </service>

        <!-- Mailer -->
        <service id="ekyna_user.mailer.default"
                 class="Ekyna\Bundle\UserBundle\Mailer\Mailer"
                 public="false">
            <argument type="service" id="mailer"/>
            <argument type="service" id="router"/>
            <argument type="service" id="templating"/>
            <argument type="collection">
                <argument key="confirmation.template">%fos_user.registration.confirmation.template%</argument>
                <argument key="resetting.template">%fos_user.resetting.email.template%</argument>
                <argument key="from_email" type="collection">
                    <argument key="confirmation">%fos_user.registration.confirmation.from_email%</argument>
                    <argument key="resetting">%fos_user.resetting.email.from_email%</argument>
                </argument>
            </argument>
            <call method="setSettingsManager">
                <argument type="service" id="ekyna_setting.manager"/>
            </call>
            <call method="setTranslator">
                <argument type="service" id="translator"/>
            </call>
            <call method="setConfig">
                <argument>%ekyna_user.config%</argument>
            </call>
        </service>

        <!-- Serialization -->
        <service id="ekyna_user.user.normalizer"
                 class="Ekyna\Bundle\UserBundle\Service\Serializer\UserNormalizer"
                 parent="ekyna_resource.serializer.resource_normalizer">
            <tag name="serializer.normalizer"/>
            <tag name="serializer.denormalizer"/>
        </service>

    </services>

</container>
